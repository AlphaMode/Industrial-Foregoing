//import se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask

buildscript {
    configurations {
        classpath.resolutionStrategy {
            cacheDynamicVersionsFor 10, 'seconds'
            cacheChangingModulesFor 0, 'seconds'
        }
    }
}

plugins {
    id "com.github.hierynomus.license" version "0.16.1"
    id 'java'
    id 'maven-publish'
    id "fabric-loom" version "1.0-SNAPSHOT"
    id "io.github.juuxel.loom-quiltflower" version "1.+"
    id "com.matthewprenger.cursegradle" version "1.4.0"
//    id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "1.64"
}
apply plugin: 'eclipse'

def isReleaseBranch = System.getenv("BRANCH") == "release-1.15" || System.getenv("BRANCH") == "release-1.16" || System.getenv("BRANCH") == "release-1.17";


group = "com.buuz135"
archivesBaseName = "industrial-foregoing"
version = "${minecraftVersion}-${project.api_version}"
if (System.getenv('BUILD_NUMBER') != null) {
    version += "-" + System.getenv('BUILD_NUMBER')
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

loom {
    accessWidenerPath = file('src/main/resources/industrial-foregoing.accesswidener')
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url "https://maven.tterrag.com/"
    }
    maven {
        name 'jared maven'
        url "https://maven.blamejared.com/"
    }
    maven {
        url 'https://www.dogforce-games.com/maven/'
    }
    maven {
        url = "https://www.cursemaven.com"
    }
    maven { url "https://maven.theillusivec4.top/" }
    maven { url "https://maven.saps.dev/minecraft/"}
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        url "https://maven.architectury.dev/"
    }
    maven { url = 'https://ladysnake.jfrog.io/artifactory/mods' }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://api.modrinth.com/maven" }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraftVersion}"
    mappings loom.officialMojangMappings()

    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
    //compileOnly fg.deobf("mezz.jei:jei-1.18.2:9.5.5.174")
    // at runtime, use the full JEI jar
    modCompileOnly("mezz.jei:jei-1.19.2-common-api:11.5.0.297")
    modCompileOnly("mezz.jei:jei-1.19.2-fabric-api:11.5.0.297")
    // at runtime, use the full JEI jar for Fabric
    modRuntimeOnly("mezz.jei:jei-1.19.2-fabric:11.5.0.297")
    modImplementation(project.dependencies.create('com.hrznstudio:titanium:1.19.2-3.7.1'))
    modImplementation(include("io.github.tropheusj:milk-lib:${project.milk_lib_version}"))

//    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_mc_version}-${curios_version}:api")
//    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_mc_version}-${curios_version}")
    //runtimeOnly fg.deobf("curse.maven:immersive-engineering-231951:3755665")
//    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")// core

    // compiled from github
    //compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.17.1-56-SNAPSHOT:api")
    //runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.17.1-56-SNAPSHOT")

    //if (findProject(':workspace') == null) {
//    compileOnly fg.deobf("mezz.jei:jei-1.16.4:7.6.1.71:api")
//    // at runtime, use the full JEI jar
//    runtimeOnly fg.deobf("mezz.jei:jei-1.16.4:7.6.1.71")
//    //}
//    compileOnly fg.deobf("curse.maven:astral-sorcery-241721:3156477")
//    compileOnly fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:1.16.3-4.1.0-+")
//    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-53.1:api")
//    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-53.1")
//    //runtimeOnly fg.deobf("curse.maven:zycraft:3099577")
//    compileOnly fg.deobf("curse.maven:farmers-delight-398521:3091999")
//    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.5.2:api")
//    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.5.2")
//    compileOnly fg.deobf("dev.ftb.mods:ftb-chunks-forge:1605.3.1-build.25")
//    compileOnly fg.deobf("me.shedaniel:architectury-forge:1.19.27")
//    compileOnly fg.deobf("dev.ftb.mods:ftb-library-forge:1605.3.1-build.48")
//    compileOnly fg.deobf("dev.ftb.mods:ftb-teams-forge:1605.2.1-build.17")
//    compileOnly fg.deobf("dev.ftb.mods:ftb-ranks-forge:1605.1.4-build.6")
}

afterEvaluate {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "2000"
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', '1.19.2'
    duplicatesStrategy = DuplicatesStrategy.WARN

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'META_INF/mods.toml'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion': '1.17.1'
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META_INF/mods.toml'
    }
}

task apiJar(type: Jar, dependsOn: 'classes') {
    classifier = 'api'
    from(sourceSets.main.output) {
        include 'com/buuz135/industrial/api/**'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
    archives apiJar
}

publish.dependsOn(project.tasks.getByName("assemble"))
publish.mustRunAfter(project.tasks.getByName("build"))

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifact apiJar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

license {
    header rootProject.file('HEADER')
    include "**/*.java"
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = 'Buuz135'
    ext.project = "Industrial Foregoing"
    ignoreFailures = true
    mapping {
        java='SLASHSTAR_STYLE'
    }
}
jar {
    manifest {
        attributes([
                "Specification-Title": "Industrial Foregoing",
                "Specification-Vendor": "Buuz135",
                "Specification-Version": "2.0", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${project.api_version}",
                "Implementation-Vendor" :"Buuz135",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.curseforge.enabled = System.env["CURSE_API"] != null

curseforge {
    if (System.env["CURSE_API"] != null){
        apiKey = System.env["CURSE_API"]
    }
    project {
        id = '266515'
        changelog = "https://github.com/InnovativeOnlineIndustries/Industrial-Foregoing/commits/release-1.19"
        changelogType = 'markdown'
        releaseType = 'beta'
        addGameVersion '1.19.2'

        mainArtifact(jar){
            relations {
                requiredDependency 'titanium'
                requiredDependency 'patchouli'
                optionalDependency 'curios'
                optionalDependency 'jei'
            }
        }

        addArtifact sourcesJar
    }
}

//task makeChangelog(type: GitChangelogTask) {
//    file = new File("CHANGELOG.md")
//    untaggedName = "Version ${project.version}"
//    //fromCommit = "6a5a3df3665643ea181873312e3801db7c662686"
//    fromRef = "refs/tags/2.3.0"
//    toRef = "release-1.17"
//    templateContent = file("changelog.mustache").getText("UTF-8")
//}

tasks.withType(Jar).all {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
